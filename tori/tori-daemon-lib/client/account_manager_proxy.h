/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -v -c AccountManagerProxy -p client/account_manager_proxy.h:client/account_manager_proxy.cpp -i ../dbus/dbus_helper.h org.saruneko.tori.account_manager.xml
 *
 * qdbusxml2cpp is Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef ACCOUNT_MANAGER_PROXY_H_1359220119
#define ACCOUNT_MANAGER_PROXY_H_1359220119

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>
#include "../dbus/dbus_helper.h"

/*
 * Proxy class for interface org.saruneko.tori.AccountManager
 */
class AccountManagerProxy: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.saruneko.tori.AccountManager"; }

public:
    AccountManagerProxy(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~AccountManagerProxy();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<DBusObjectPathHash> getAccounts()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("getAccounts"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void accountCreated(uint accountId, const QString &accountName);
    void accountDeleted(uint accountId, const QString &accountName);
    void accountUpdated(uint accountId, const QString &accountName);
};

namespace org {
  namespace saruneko {
    namespace tori {
      typedef ::AccountManagerProxy AccountManager;
    }
  }
}
#endif
