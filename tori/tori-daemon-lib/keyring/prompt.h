/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -v -c PromptInterface -p keyring/prompt.h:keyring/prompt.cpp org.freedesktop.secret.prompt.xml
 *
 * qdbusxml2cpp is Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef PROMPT_H_1355187876
#define PROMPT_H_1355187876

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface org.freedesktop.Secret.Prompt
 */
class PromptInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.freedesktop.Secret.Prompt"; }

public:
    PromptInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~PromptInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<> Dismiss()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("Dismiss"), argumentList);
    }

    inline QDBusPendingReply<> Prompt(const QString &window_id)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(window_id);
        return asyncCallWithArgumentList(QLatin1String("Prompt"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void Completed(bool dismissed, const QDBusVariant &result);
};

namespace org {
  namespace freedesktop {
    namespace Secret {
      typedef ::PromptInterface Prompt;
    }
  }
}
#endif
